#If we list all the natural numbers below 10 that are multiples of $3$ or $5$, we get $3, 5, 6$ and $9$. The sum of these multiples is $23$.</p>
#Find the sum of all the multiples of $3$ or $5$ below 1000.


#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


#Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
#You may assume that each input would have exactly one solution, and you may not use the same element twice.
#You can return the answer in any order.


def sum_multiples_of_3_and_5(n):
    sum = 0
    for i in range(n):
        if i % 3 == 0 or i % 5 == 0:
            sum += i
    return sum

def sum_even_fibonacci(n):
    sum = 0
    a = 1
    b = 2
    while b < n:
        if b % 2 == 0:
            sum += b
        a, b = b, a + b
    return sum

def two_sum(nums, target):
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            if nums[i] + nums[j] == target:
                return [i, j]
    return None

def main():
    print(sum_multiples_of_3_and_5(1000))
    print(sum_even_fibonacci(4000000))
    print(two_sum([2, 7, 11, 15], 9))

if __name__ == "__main__":
    main()